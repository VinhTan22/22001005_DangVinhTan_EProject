name: CI/CD Pipeline for 22001005_DangVinhTan_EProject

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_and_test:
    name: 🔧 Build & Test Services
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672

    steps:
      - name: 🧩 Checkout source code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install dependencies for all services
        run: |
          cd auth && npm install && cd ..
          cd product && npm install && cd ..
          cd order && npm install && cd ..
          cd gateway && npm install && cd ..

      - name: ✅ Verify build
        run: |
          echo "✅ All services installed successfully"
          ls -la

  docker_build_push:
    name: 🐳 Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 🧩 Checkout source code
        uses: actions/checkout@v4

      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🐳 Build and Push images to Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service ./auth
          docker build -t ${{ secrets.DOCKER_USERNAME }}/product-service ./product
          docker build -t ${{ secrets.DOCKER_USERNAME }}/order-service ./order
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gateway ./gateway

          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service
          docker push ${{ secrets.DOCKER_USERNAME }}/product-service
          docker push ${{ secrets.DOCKER_USERNAME }}/order-service
          docker push ${{ secrets.DOCKER_USERNAME }}/gateway

      - name: 🚀 Deploy (Optional)
        run: echo "✅ Deployment successful!"
